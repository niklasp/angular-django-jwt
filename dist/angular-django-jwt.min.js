!function(){angular.module("angular-django-jwt",["angular-django-jwt.constants","angular-django-jwt.auth-service","angular-django-jwt.interceptor","angular-django-jwt.jwt"]),angular.module("angular-django-jwt.constants",[]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}),angular.module("angular-django-jwt.auth-service",["angular-storage","angular-django-jwt.constants"]).provider("djangoAuthService",function(){this.LOCAL_CREDENTIALS_KEY="user_credentials",this.serverUrl="";var e=this,t=null;this.$get=["$log","$http","$q","store","$rootScope","AUTH_EVENTS",function(r,n,o,a,u,i){function s(t){function a(e){return e.data?(f(e.data),u.$broadcast(i.loginSuccess),e.data):void 0}function s(){return u.$broadcast(i.loginFailed),o.reject("DjangoAuthService: Login Failed.")}if(""===e.serverUrl){var l='SERVER_URL must not be empty, to set, call djangoAuthService.serverUrl = "your.server.url"';return r.error(l),o.reject(l)}return n.post(e.serverUrl+"auth/login/",{username:t.username,password:t.password}).then(a,s)}function l(){return p()}function c(){return t}function d(){return g()}function h(e){return angular.isArray(e)||(e=[e]),d().then(function(t){return e.indexOf(-1!==t.userRole)})}function g(){var r=o.defer();if(null!==t)r.resolve(t);else{var n=a.get(e.LOCAL_CREDENTIALS_KEY);null!==n?(t=n,r.resolve(n)):r.reject()}return r.promise}function f(r){a.set(e.LOCAL_CREDENTIALS_KEY,r),t=r}function p(){return a.remove(e.LOCAL_CREDENTIALS_KEY)}return{login:s,logout:l,isAuthenticated:d,isAuthorized:h,getUser:c}}]}),angular.module("angular-django-jwt.interceptor",["angular-django-jwt.constants","angularCordovaNetworkStatus"]).provider("jwtInterceptor",["AUTH_EVENTS",function(e){this.urlParam=null,this.authHeader="Authorization",this.authPrefix="Bearer ",this.tokenGetter=function(){return null},this.responseError=function(){return null},this.interceptRequest=function(){return!0};var t=this;this.$get=["$q","$injector","$rootScope","NetworkStatusMonitor",function(r,n,o,a){return{request:function(e){if("undefined"!=typeof a&&a.isOffline()&&console.log("you are offline we will have to do something"),!n.invoke(t.interceptRequest,this,{config:e}))return console.log("not intercepting request, because config.interceptRequest was false"),e;if(e.skipAuthorization)return e;if(t.urlParam){if(e.params=e.params||{},e.params[t.urlParam])return e}else if(e.headers=e.headers||{},e.headers[t.authHeader])return e;var o=r.when(n.invoke(t.tokenGetter,this,{config:e}));return o.then(function(r){return r&&(t.urlParam?e.params[t.urlParam]=r:e.headers[t.authHeader]=t.authPrefix+r),e})},responseError:function(a){return null===t.responseError()?(o.$broadcast({401:e.notAuthorized,403:e.notAuthenticated}[a.status],a),r.reject(a)):n.invoke(t.responseError,this,{response:a})}}}]}]),angular.module("angular-django-jwt.jwt",[]).service("jwtHelper",["$window",function(e){this.urlBase64Decode=function(t){var r=t.replace(/-/g,"+").replace(/_/g,"/");switch(r.length%4){case 0:break;case 2:r+="==";break;case 3:r+="=";break;default:throw"Illegal base64url string!"}return e.decodeURIComponent(escape(e.atob(r)))},this.decodeToken=function(e){var t=e.split(".");if(3!==t.length)throw new Error("JWT must have 3 parts");var r=this.urlBase64Decode(t[1]);if(!r)throw new Error("Cannot decode the token");return angular.fromJson(r)},this.getTokenExpirationDate=function(e){var t=this.decodeToken(e);if("undefined"==typeof t.exp)return null;var r=new Date(0);return r.setUTCSeconds(t.exp),r},this.isTokenExpired=function(e,t){var r=this.getTokenExpirationDate(e);return t=t||0,null===r?!1:!(r.valueOf()>(new Date).valueOf()+1e3*t)}}])}();